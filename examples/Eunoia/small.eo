(include "../../signature/Alethe.smt3")

(declare-const a Real)
(declare-const b Real)

; Instead of `:named`, we use `define` to give names to terms.
(define s1 () (= b 10.0))

(assume h1 (xor (not (> a 5.0)) s1))
(assume h2 (not (= b 10.0)))
(assume h3 (not (<= a 5.0)))

; The conclusion is always the first entry in `:args`
(step t1 :rule xor1 :premises (h1) :args ((@cl (not (> a 5.0)) s1)))
(step t2 :rule la_generic :args ((@cl (<= a 5.0) (> a 5.0)) (+ 1.0 1.0)))
; The empty clause is just the constant `false`.
; In AletheLF, the conclusion of a step can optionally be given with the
; `step` command.  This helps debugging.
(step t3 false :rule resolution :premises (t1 t2 h2 h3) :args (false))
